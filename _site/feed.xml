<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Luke Fender</title>
    <description>A blog about everything and nothing
</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 14 Mar 2015 13:35:39 -0400</pubDate>
    <lastBuildDate>Sat, 14 Mar 2015 13:35:39 -0400</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Why does “compass watch” say it cannot load sass/script/node (LoadError)?</title>
        <description>&lt;p&gt;Why does “compass watch” say it cannot load sass/script/node (LoadError)?&lt;/p&gt;

&lt;p&gt;I’m having a problem with my compass watch command - it worked fine up until a few days ago. I have made no changes to my config files.&lt;/p&gt;

&lt;p&gt;I reinstalled Compass, used rvm to update Ruby. I checked my custom_require.rb file but I really don’t know what to look for. It seems to be trying to load the file “sass/script/node” somewhere and from &lt;code&gt;http://sass-lang.com/docs/yardoc/Sass/Script/Node.html&lt;/code&gt; I gather the filepath - but I have nothing there.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:60:in `require&#39;: cannot load such file -- sass/script/node (LoadError) from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:60:in `rescue in require&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:35:in `require&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass/sass_extensions/monkey_patches/browser_support.rb:1:in `&amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass/sass_extensions/monkey_patches.rb:2:in `block in &amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass/sass_extensions/monkey_patches.rb:1:in `each&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass/sass_extensions/monkey_patches.rb:1:in `&amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass/sass_extensions.rb:9:in `&amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass.rb:5:in `block in &amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass.rb:4:in `each&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/lib/compass.rb:4:in `&amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:55:in `require&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/bin/compass:20:in `block in &amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/bin/compass:8:in `fallback_load_path&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/bin/compass:19:in `&amp;lt;top (required)&amp;gt;&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/bin/compass:19:in `load&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/bin/compass:19:in `&amp;lt;main&amp;gt;&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `eval&#39; from /Users/sampurcell/.rvm/gems/ruby-1.9.3-p194/bin/ruby_noexec_wrapper:14:in `&amp;lt;main&amp;gt;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anyone have any ideas?&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;I believe this is due to versioning conflicts with sass.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/compass&quot;&gt;https://rubygems.org/gems/compass&lt;/a&gt; gem is currently at &lt;code&gt;v0.12.16&lt;/code&gt; currently - add this to Gemfile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &#39;sass&#39;, &#39;3.2.19&#39;
gem &#39;compass&#39;, &#39;0.12.6&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may be required to uninstall all versions of both gems first.&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/why-does-compass-watch-say-it-cannot-load-sass-script-node-loaderror.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/why-does-compass-watch-say-it-cannot-load-sass-script-node-loaderror.html</guid>
        
        
      </item>
    
      <item>
        <title>Where can I find the error logs of nginx, using fastcgi and django</title>
        <description>&lt;p&gt;Where can I find the error logs of nginx, using fastcgi and django&lt;/p&gt;

&lt;p&gt;i m using django with fastcgi + nginx.I want to know were the logs (error) are stored in this case&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;My ngninx log is located here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tail -f /usr/local/var/log/nginx/error.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also check your &lt;code&gt;nginx.conf&lt;/code&gt; to see if you have any directives dumping to custom log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;error_log /usr/local/var/log/nginx/error.log;
error_log /usr/local/var/log/nginx/error.log notice;
error_log /usr/local/var/log/nginx/error.log info;
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/where-can-i-find-the-error-logs-of-nginx-using-fastcgi-and-django.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/where-can-i-find-the-error-logs-of-nginx-using-fastcgi-and-django.html</guid>
        
        
      </item>
    
      <item>
        <title>Vim/command-T: Ignoring “gem-name” because its extensions are not built. Try gem pristine “gem-name”</title>
        <description>&lt;p&gt;Vim/command-T: Ignoring “gem-name” because its extensions are not built. Try gem pristine “gem-name”&lt;/p&gt;

&lt;p&gt;Whenever I open the command-T plugin for the first time in MacVim, I get the following terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Ignoring atomic-1.1.13 because its extensions are not built. Try: gem pristine atomic-1.1.13
Ignoring atomic-1.1.10 because its extensions are not built. Try: gem pristine atomic-1.1.10
Ignoring bcrypt-3.1.7 because its extensions are not built. Try: gem pristine bcrypt-3.1.7
Ignoring bcrypt-ruby-3.0.1 because its extensions are not built. Try: gem pristine bcrypt-ruby-3.0.1
Ignoring eventmachine-1.0.3 because its extensions are not built. Try: gem pristine eventmachine-1.0.3
Ignoring executable-hooks-1.3.2 because its extensions are not built. Try: gem pristine executable-hooks-1.3.2
Ignoring ffi-1.9.3 because its extensions are not built. Try: gem pristine ffi-1.9.3
Ignoring ffi-1.9.0 because its extensions are not built. Try: gem pristine ffi-1.9.0
Ignoring ffi-1.4.0 because its extensions are not built. Try: gem pristine ffi-1.4.0
Ignoring gem-wrappers-1.2.4 because its extensions are not built. Try: gem pristine gem-wrappers-1.2.4
Ignoring json-1.8.1 because its extensions are not built. Try: gem pristine json-1.8.1
Ignoring json-1.8.0 because its extensions are not built. Try: gem pristine json-1.8.0
Ignoring nokogiri-1.6.3.1 because its extensions are not built. Try: gem pristine nokogiri-1.6.3.1
Ignoring nokogiri-1.6.0 because its extensions are not built. Try: gem pristine nokogiri-1.6.0
Ignoring nokogiri-1.5.6 because its extensions are not built. Try: gem pristine nokogiri-1.5.6
Ignoring pg-0.17.1 because its extensions are not built. Try: gem pristine pg-0.17.1
Ignoring pg-0.17.0 because its extensions are not built. Try: gem pristine pg-0.17.0
Ignoring pg-0.15.1 because its extensions are not built. Try: gem pristine pg-0.15.1
Ignoring pg-0.14.1 because its extensions are not built. Try: gem pristine pg-0.14.1
Ignoring sqlite3-1.3.9 because its extensions are not built. Try: gem pristine sqlite3-1.3.9
Ignoring sqlite3-1.3.8 because its extensions are not built. Try: gem pristine sqlite3-1.3.8
Ignoring sqlite3-1.3.7 because its extensions are not built. Try: gem pristine sqlite3-1.3.7
Ignoring thin-1.6.2 because its extensions are not built. Try: gem pristine thin-1.6.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Any ideas?&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;I recently switched to from &lt;code&gt;rvm&lt;/code&gt; to &lt;code&gt;chruby&lt;/code&gt; and ran &lt;code&gt;gem update --system&lt;/code&gt;, thats when the issue began occurring for me. After that, anytime I ran bundle I was slaughtered with the same warnings.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ignoring curb-0.8.6 because its extensions are not built. Try: gem pristine curb-0.8.6&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This, plust dozens of other warnings for other gems.&lt;/p&gt;

&lt;p&gt;Not sure what fixed it, but I did 2 things and the warning disappeared:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem uninstall bundler
gem install bundler


gem install curb
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/vim-command-t-ignoring-gem-name-because-its-extensions-are-not-built-try-gem-pristine-gem-name.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/vim-command-t-ignoring-gem-name-because-its-extensions-are-not-built-try-gem-pristine-gem-name.html</guid>
        
        
      </item>
    
      <item>
        <title>Typeahead: Uncaught Error Missing source</title>
        <description>&lt;p&gt;Typeahead: Uncaught Error Missing source&lt;/p&gt;

&lt;p&gt;I am getting this error in console everytime I try to run the following code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;#autcomplete_search&#39;).typeahead({ highlight: true
},
{ name: &#39;apple_game&#39;, remote: &quot;/search/autocomplete?keyword=make&quot;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;
&lt;p&gt;If fetching remote, you need to specify the engine. Here is an example from the docs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var bestPictures = new Bloodhound({ datumTokenizer: Bloodhound.tokenizers.obj.whitespace(&#39;value&#39;), queryTokenizer: Bloodhound.tokenizers.whitespace, prefetch: &#39;../data/films/post_1960.json&#39;, remote: &#39;../data/films/queries/%QUERY.json&#39;
});


bestPictures.initialize();


$(&#39;#remote .typeahead&#39;).typeahead(null, { name: &#39;best-pictures&#39;, displayKey: &#39;value&#39;, source: bestPictures.ttAdapter()
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in this example, &lt;code&gt;bestPictures&lt;/code&gt; is your engine&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/typeahead-uncaught-error-missing-source.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/typeahead-uncaught-error-missing-source.html</guid>
        
        
      </item>
    
      <item>
        <title>To use Wordpress themes in Rails apps?</title>
        <description>&lt;p&gt;To use Wordpress themes in Rails apps?&lt;/p&gt;

&lt;p&gt;Wordpress themes are beautiful!&lt;/p&gt;

&lt;p&gt;Is there any guideline to use Wordpress themes in a rails app? Even better, are there rails app templates which can use the Wordpress themes already?&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Did not find an easy solution to this so I created a gem: &lt;a href=&quot;https://github.com/lfender6445/theme_bandit&quot;&gt;https://github.com/lfender6445/theme_bandit&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install theme_bandit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s a work in progress, but the gem allows you to build a tiny rack application out of an existing live site. If nothing else, this will do a large portion of the setup work when converting an existing template to a ruby project (handling of assets like js, css, and conversion for template engines)&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/to-use-wordpress-themes-in-rails-apps.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/to-use-wordpress-themes-in-rails-apps.html</guid>
        
        
      </item>
    
      <item>
        <title>Run `bundle` system command in subfolder</title>
        <description>&lt;p&gt;Run &lt;code&gt;bundle&lt;/code&gt; system command in subfolder&lt;/p&gt;

&lt;p&gt;I am attempting to run &lt;code&gt;bundle&lt;/code&gt; in a subfolder of my ruby project, but it appears to be running in the context of my initial directory even though I have changed the current working dir to the subfolder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# change directories and run bundle in a sub directory:
# ruby script.rb
system(&#39;bundle&#39;)
system(&#39;cd sub_folder&#39;)
system(&#39;bundle&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The bundle command runs successfully but only for the parent folder. Changing directories via system commands does not properly switch the context for bundler, and runs for the parent folders gemfile twice. What am I missing?&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Just figured it out:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Dir.chdir(&#39;sub_folder&#39;) do Bundler.with_clean_env do    system(&#39;bundle&#39;) end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Shelling out - Any Ruby code that opens a subshell (like system, backticks, or %x{}) will automatically use the current Bundler environment. If you need to shell out to a Ruby command that is not part of your current bundle, use the with_clean_env method with a block. Any subshells created inside the block will be given the environment present before Bundler was activated. For example, Homebrew commands run Ruby, but don’t work inside a bundle:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://bundler.io/man/bundle-exec.1.html#ENVIRONMENT-MODIFICATIONS&quot;&gt;http://bundler.io/man/bundle-exec.1.html#ENVIRONMENT-MODIFICATIONS&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/run-bundle-system-command-in-subfolder.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/run-bundle-system-command-in-subfolder.html</guid>
        
        
      </item>
    
      <item>
        <title>ruby: delegate if object responds to method</title>
        <description>&lt;p&gt;ruby: delegate if object responds to method&lt;/p&gt;

&lt;p&gt;I’d like to use delegation in Ruby, but I can’t guarantee that the target object responds to all method I will call. May I define delegation with a default behaviour?&lt;/p&gt;

&lt;p&gt;E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class DummyPresenter delegate :name, :age, :to =&amp;gt; :@content, :default =&amp;gt; nil def initialize(content)   @content = content end
end


class Student def name   &quot;name&quot; end
end    


&amp;gt; DummyPresenter.new(Student.new).age # =&amp;gt; nil
&amp;gt; DummyPresenter.new(Student.new).name # =&amp;gt; &quot;name&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, the above example would raise:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NoMethodError:  undefined method `age&#39; for #&amp;lt;Student:0xa121212&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;
&lt;p&gt;I have found the easiest way to delegate methods to the original object is with SimpleDelegator (ships in stdlib)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Presenter &amp;lt; SimpleDelegator
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;def initialize model
  super model
end&lt;/p&gt;

&lt;p&gt;def foo
  ‘bar’
end
    end&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Person def bam   &#39;baz&#39; end
end


person = Person.new
presenter = Presenter.new Person


presenter.foo # =&amp;gt; &#39;bar&#39;
presenter.bam # =&amp;gt; &#39;baz&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the docs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SimpleDelegator class provides the means to delegate all supported method calls to the object passed into the constructor&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/ruby-delegate-if-object-responds-to-method.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/ruby-delegate-if-object-responds-to-method.html</guid>
        
        
      </item>
    
      <item>
        <title>ruby block/procs and method call</title>
        <description>&lt;p&gt;ruby block/procs and method call&lt;/p&gt;

&lt;p&gt;I’m trying to understand the need of the block &lt;code&gt;{ |s| puts s }&lt;/code&gt; here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def accepts_hash( var )   print &quot;got: &quot;, var.inspect # will print out what it received end


accepts_hash( { :arg1 =&amp;gt; &#39;giving arg1&#39;, :argN =&amp;gt; &#39;giving argN&#39; } ) { |s| puts s }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I run this code, either with or without &lt;code&gt;{ |s| puts s }&lt;/code&gt; ,&lt;/p&gt;

&lt;p&gt;the output is still the same &lt;code&gt;({ :arg1 =&amp;gt; &#39;giving arg1&#39;, :argN =&amp;gt; &#39;giving argN&#39; })&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Can anyone please explain what does the block &lt;code&gt;{ |s| puts s }&lt;/code&gt; do here?&lt;/p&gt;

&lt;p&gt;(source: &lt;a href=&quot;http://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Method_Calls&quot;&gt;http://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Method_Calls&lt;/a&gt;)&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;The block following your method call &lt;code&gt;{ |s| puts s }&lt;/code&gt; does nothing until you tell it to. If you continue reading the page they explain blocks further down - here is an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def accepts_hash( var ) print &quot;got: &quot;, var.inspect # will print out what it received yield &#39; jenny from the block&#39; # pass value back to block
end


accepts_hash( { :arg1 =&amp;gt; &#39;giving arg1&#39;, :argN =&amp;gt; &#39;giving argN&#39; } ) { |s| puts s }


=&amp;gt; {:arg1=&amp;gt;&quot;giving arg1&quot;, :argN=&amp;gt;&quot;giving argN&quot;} jenny from the block
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By yielding, we can return and process the block - in this case &lt;code&gt;s&lt;/code&gt; represents the string we are yielding, and &lt;code&gt;&#39; jenny from the block&#39;&lt;/code&gt; is its value.&lt;/p&gt;

&lt;p&gt;Blocks make ruby more flexible and declarative, allowing you to write idiomatic and human readable code. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3.times { p &#39;hello&#39; } 
=&amp;gt; &quot;hello&quot;
=&amp;gt; &quot;hello&quot;
=&amp;gt; &quot;hello&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ruby is a gorgeous lanuage - more info on blocks and practical usage: &lt;a href=&quot;http://www.gotealeaf.com/blog/declarative-thinking-with-higher-order-functions-and-blocks&quot;&gt;http://www.gotealeaf.com/blog/declarative-thinking-with-higher-order-functions-and-blocks&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/ruby-block-procs-and-method-call.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/ruby-block-procs-and-method-call.html</guid>
        
        
      </item>
    
      <item>
        <title>Random &#39;concerns&#39; folders and &#39;.keep&#39; files</title>
        <description>&lt;p&gt;Random ‘concerns’ folders and ‘.keep’ files&lt;/p&gt;

&lt;p&gt;I am learning rails.&lt;/p&gt;

&lt;p&gt;Somewhere along the line, I noticed that seemingly random folders and files are appearing in my rails app’s directory. In some folders there is a &lt;code&gt;concerns&lt;/code&gt; folder with a &lt;code&gt;.keep&lt;/code&gt; file inside it. The &lt;code&gt;.keep&lt;/code&gt; file appears to be empty. In other folders there is no &lt;code&gt;concerns&lt;/code&gt; folder but an empty &lt;code&gt;.keep&lt;/code&gt; file is present.&lt;/p&gt;

&lt;p&gt;Does anyone know what the deal with these files/folders is?&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;.keep files are especially helpful when you want to commit empty directories with git.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The .keep files are there to prevent portage from one vcs to another, deleting important directories when you unmerge something that would cause those directories to be empty. It’s a software design paradigm which seeks to decrease the number of decisions that developers need to make, gaining simplicity, but not necessarily losing flexibility.&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/random-concerns-folders-and-keep-files.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/random-concerns-folders-and-keep-files.html</guid>
        
        
      </item>
    
      <item>
        <title>Rails: I update migration file then run db:migrate, but my schema isn&#39;t updating</title>
        <description>&lt;p&gt;Rails: I update migration file then run db:migrate, but my schema isn’t updating&lt;/p&gt;

&lt;p&gt;Im trying to add an extra field to one of my tables.&lt;/p&gt;

&lt;p&gt;Ive added the field in the migration file (under db\migrate) then ran ‘rake db:migrate’ which ran without troubles and my text editor even told me my schema.db file has been updated and needs to refresh.&lt;/p&gt;

&lt;p&gt;The schema file does not contain my new field and any attempts to reference the field from my views fail miserably.&lt;/p&gt;

&lt;p&gt;How do I do this? It is possible to update a table with an extra field via rails without having to totally drop and recreate the database again?&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Evolve&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;I was able to regenerate my schema with latter migrations by running &lt;code&gt;rake db:schema:dump&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Mar 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//2015/03/14/rails-i-update-migration-file-then-run-db-migrate-but-my-schema-isn-t-updating.html</link>
        <guid isPermaLink="true">http://localhost:4000//2015/03/14/rails-i-update-migration-file-then-run-db-migrate-but-my-schema-isn-t-updating.html</guid>
        
        
      </item>
    
  </channel>
</rss>
